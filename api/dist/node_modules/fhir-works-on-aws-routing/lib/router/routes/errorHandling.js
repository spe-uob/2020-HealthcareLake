"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.unknownErrorHandler = exports.httpErrorHandler = exports.applicationErrorMapper = void 0;
const http_errors_1 = __importDefault(require("http-errors"));
const fhir_works_on_aws_interface_1 = require("fhir-works-on-aws-interface");
const operationsGenerator_1 = __importDefault(require("../operationsGenerator"));
exports.applicationErrorMapper = (err, req, res, next) => {
    console.error(err);
    if (err instanceof fhir_works_on_aws_interface_1.ResourceNotFoundError) {
        next(new http_errors_1.default.NotFound(err.message));
        return;
    }
    if (err instanceof fhir_works_on_aws_interface_1.ResourceVersionNotFoundError) {
        next(new http_errors_1.default.NotFound(err.message));
        return;
    }
    if (err instanceof fhir_works_on_aws_interface_1.InvalidResourceError) {
        next(new http_errors_1.default.BadRequest(`Failed to parse request body as JSON resource. Error was: ${err.message}`));
        return;
    }
    next(err);
};
exports.httpErrorHandler = (err, req, res, next) => {
    if (http_errors_1.default.isHttpError(err)) {
        console.error('HttpError', err);
        res.status(err.statusCode).send(operationsGenerator_1.default.generateError(err.message));
        return;
    }
    next(err);
};
exports.unknownErrorHandler = (err, req, res, 
// eslint-disable-next-line @typescript-eslint/no-unused-vars
next) => {
    console.error('Unhandled Error', err);
    res.status(500).send(operationsGenerator_1.default.generateError('Internal server error'));
};
//# sourceMappingURL=errorHandling.js.map